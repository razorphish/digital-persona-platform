# Docker Compose file for development environment

services:
  # Next.js Development Server with Hot Reload
  nextjs-app:
    build:
      context: ./nextjs-migration
      dockerfile: Dockerfile
      target: development
    ports:
      - "3001:3000"
      - "9229:9229"  # Node.js debugging port
    environment:
      - NODE_ENV=development
      - DATABASE_URL=sqlite:///app/digital_persona.db
      - NEXTAUTH_SECRET=dev-secret-key-change-in-production
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION:-us-west-1}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - ML_SERVICE_URL=http://python-ml-service:8001
      - CHOKIDAR_USEPOLLING=true  # For file watching in Docker
    volumes:
      - ./nextjs-migration:/app
      - /app/node_modules
      - /app/.next
      - ./uploads:/app/uploads
    depends_on:
      - python-ml-service
    networks:
      - dev-network
    stdin_open: true
    tty: true

  # Python ML Service Development
  python-ml-service:
    build:
      context: ./python-ml-service
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
      - "5678:5678"  # Python debugging port (debugpy)
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION:-us-west-1}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - ENVIRONMENT=development
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
    volumes:
      - ./python-ml-service:/app
      - ./uploads:/app/uploads
      - ./chroma_db:/app/chroma_db
    networks:
      - dev-network
    command: >
      sh -c "pip install debugpy -t /tmp && 
             python /tmp/debugpy --wait-for-client --listen 0.0.0.0:5678 -m uvicorn app.main:app --host 0.0.0.0 --port 8001 --reload"

  # Redis for development
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - dev-network
    command: redis-server --appendonly yes

  # Database viewer (optional)
  sqlite-web:
    image: coleifer/sqlite-web
    ports:
      - "8080:8080"
    volumes:
      - ./nextjs-migration:/data
    networks:
      - dev-network
    command: sqlite_web -H 0.0.0.0 -x /data/digital_persona.db
    profiles:
      - tools

volumes:
  redis_dev_data:

networks:
  dev-network:
    driver: bridge 