name: Deploy Only

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        default: "prod"
        type: choice
        options:
          - dev
          - staging
          - prod

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-west-1

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.0"

      - name: Terraform Init
        run: |
          cd terraform/environments/main
          terraform init

      - name: Terraform Plan
        run: |
          cd terraform/environments/main
          terraform plan -out=tfplan
        env:
          TF_VAR_environment: ${{ github.event.inputs.environment || 'prod' }}

      - name: Terraform Apply
        run: |
          cd terraform/environments/main
          terraform apply -auto-approve tfplan
        env:
          TF_VAR_environment: ${{ github.event.inputs.environment || 'prod' }}

      - name: Build and push Docker images
        run: |
          # Login to ECR
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

          # Build and push backend
          docker build -t ${{ secrets.ECR_REGISTRY }}/hibiji-backend:${{ github.sha }} .
          docker tag ${{ secrets.ECR_REGISTRY }}/hibiji-backend:${{ github.sha }} ${{ secrets.ECR_REGISTRY }}/hibiji-backend:latest
          docker push ${{ secrets.ECR_REGISTRY }}/hibiji-backend:${{ github.sha }}
          docker push ${{ secrets.ECR_REGISTRY }}/hibiji-backend:latest

          # Build and push frontend
          cd frontend
          docker build -t ${{ secrets.ECR_REGISTRY }}/hibiji-frontend:${{ github.sha }} .
          docker tag ${{ secrets.ECR_REGISTRY }}/hibiji-frontend:${{ github.sha }} ${{ secrets.ECR_REGISTRY }}/hibiji-frontend:latest
          docker push ${{ secrets.ECR_REGISTRY }}/hibiji-frontend:${{ github.sha }}
          docker push ${{ secrets.ECR_REGISTRY }}/hibiji-frontend:latest

      - name: Update ECS services
        run: |
          aws ecs update-service --cluster hibiji-main-cluster --service hibiji-main-backend --force-new-deployment
          aws ecs update-service --cluster hibiji-main-cluster --service hibiji-main-frontend --force-new-deployment

      - name: Wait for deployment
        run: |
          aws ecs wait services-stable --cluster hibiji-main-cluster --services hibiji-main-backend hibiji-main-frontend
