name: Simple Secure Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-west-1

jobs:
  test-aws-access:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Test AWS access
        run: |
          echo "Testing AWS access..."
          aws sts get-caller-identity
          aws ec2 describe-instances --max-items 1 --query 'Reservations[0].Instances[0].InstanceId' --output text || echo "No instances found"
          aws ecs list-clusters --query 'clusterArns[0]' --output text || echo "No clusters found"

  test-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run simple backend test
        run: |
          echo "Testing backend setup..."
          python -c "import app; print('âœ… Backend imports successfully')"

  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Test frontend build
        working-directory: ./frontend
        run: |
          echo "Testing frontend build..."
          npm run build

  terraform-plan:
    runs-on: ubuntu-latest
    needs: [test-aws-access, test-backend, test-frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.0"

      - name: Terraform Init
        run: |
          cd terraform/environments/main
          terraform init

      - name: Terraform Plan
        run: |
          cd terraform/environments/main
          terraform plan -out=tfplan
        env:
          TF_VAR_environment: dev
