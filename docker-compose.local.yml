version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: dpp-local-postgres
    environment:
      POSTGRES_DB: digital_persona
      POSTGRES_USER: dpp_admin
      POSTGRES_PASSWORD: local_dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - dpp-local
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U dpp_admin -d digital_persona" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO (S3-compatible storage)
  minio:
    image: minio/minio:latest
    container_name: dpp-local-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - dpp-local
    command: server /data --console-address ":9001"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

  # MinIO Client - Creates bucket on startup
  minio-init:
    image: minio/mc:latest
    container_name: dpp-local-minio-init
    depends_on:
      minio:
        condition: service_healthy
    networks:
      - dpp-local
    entrypoint: >
      /bin/sh -c " mc alias set myminio http://minio:9000 minioadmin minioadmin123; mc mb myminio/digital-persona-uploads || true; mc policy set public myminio/digital-persona-uploads; echo 'MinIO bucket created and configured'; "

  # Backend API Server
  backend:
    build:
      context: ./apps/server
      dockerfile: Dockerfile
    container_name: dpp-local-backend
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://dpp_admin:local_dev_password@postgres:5432/digital_persona
      JWT_SECRET: local-development-jwt-secret-change-in-production
      CORS_ORIGIN: http://localhost:3000,http://frontend:3000
      AWS_REGION: us-east-1
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin123
      AWS_ENDPOINT_URL: http://minio:9000
      S3_BUCKET: digital-persona-uploads
      S3_FORCE_PATH_STYLE: "true"
    ports:
      - "3001:3001"
    volumes:
      - ./apps/server/src:/app/src:ro
      - ./packages:/app/packages:ro
    networks:
      - dpp-local
    depends_on:
      postgres:
        condition: service_healthy
      minio-init:
        condition: service_completed_successfully
    restart: unless-stopped

  # Frontend Web App
  frontend:
    build:
      context: ./apps/web
      dockerfile: Dockerfile.simple
    container_name: dpp-local-frontend
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3001
      NEXT_PUBLIC_WEBSITE_URL: http://localhost:3000
    ports:
      - "3000:3000"
    volumes:
      - ./apps/web/src:/app/src:ro
      - ./packages:/app/packages:ro
    networks:
      - dpp-local
    depends_on:
      - backend
    restart: unless-stopped

  # Redis (for session storage and caching)
  redis:
    image: redis:7-alpine
    container_name: dpp-local-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - dpp-local
    command: redis-server --appendonly yes
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    name: dpp-local-postgres-data
  minio_data:
    name: dpp-local-minio-data
  redis_data:
    name: dpp-local-redis-data

networks:
  dpp-local:
    name: dpp-local-network
    driver: bridge
